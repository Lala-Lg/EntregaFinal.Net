@page "/editarTramite/{idTramite:int}"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Web
@using SGE.Aplicacion.Enumerativos
@using SGE.Aplicacion.Servicios
@inject NavigationManager NavigationManager
@inject CasoDeUsoTramiteModificacion CasoDeUsoTramiteModificacion
@inject ITramiteRepositorio ITramiteRepositorio

@using SGE.Aplicacion.Excepciones

@inject IUserService UserService

<h1>Editar Tramite</h1>

<form>
    <div class="form-group">
        <label for="etiqueta">Seleccionar Etiqueta para el Trámite</label><br/>
        <select id="etiquetas" @bind="_tramite.Etiqueta">
            @foreach (var etiqueta in Enum.GetValues(typeof(EtiquetaTramite)))
            {
                <option value="@etiqueta">@etiqueta</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="contenido">Contenido</label>
        <textarea id="contenido" class="form-control" @bind="_tramite.Contenido"></textarea>
    </div>
    <button type="button" class="btn btn-primary" @onclick="guardarCambios">Guardar</button>
</form>

@code {

    private int id_Usuario => UserService.UserId;

    [Parameter]
    public int idTramite { get; set; }

    public int expedienteId;
    private Tramite _tramite = null;
    private string? ErrorMessage { get; set; } = "";
    protected override void OnInitialized()
    {
        _tramite = ITramiteRepositorio.ObtenerPorId(idTramite);
        expedienteId = _tramite.ExpedienteId;
    }

     private void guardarCambios()
    {
        try
        {
            Console.WriteLine("Guardando cambios...");
            CasoDeUsoTramiteModificacion.Ejecutar(_tramite, id_Usuario);
            Console.WriteLine("Navegación después de guardar...");
            NavigationManager.NavigateTo($"/listarTramites/{expedienteId}");
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }
}
