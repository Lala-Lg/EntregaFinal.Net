@page "/listarExpedientes"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Web
@using SGE.Aplicacion.Servicios
@inject NavigationManager NavigationManager
@inject CasoDeUsoExpedienteConsultaTodos CasoDeUsoExpedienteConsultaTodos
@inject CasoDeUsoExpedienteConsultaPorId CasoDeUsoExpedienteConsultaPorId
@inject CasoDeUsoExpedienteBaja CasoDeUsoExpedienteBaja
@inject IUserService UserService


<h1>ListarExpedientes</h1>

<p>A continuaciÃ³n se visualiza el listado de los Expedientes.</p>

@if (_expedientes == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Caratula</th>
                <th>FechaCreacion</th>
                <th>UltimaModificacion</th>
                <th>IdUsuarioUltimaModificacion</th>
                <th>Estado</th>
                <th>Tramites</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expediente in _expedientes)
            {
                <tr>
                    <td>@expediente.Id</td>
                    <td>@expediente.Caratula</td>
                    <td>@expediente.FechaCreacion</td>
                    <td>@expediente.UltimaModificacion</td>
                    <td>@expediente.IdUsuarioUltimaModificacion</td>
                    <td>@expediente.Estado</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=>ListaTramite(expediente)">
                        <span class="oi oi-pencil">Ver Tramites</span>
                        </button>
                         <button class="btn btn-primary" @onclick="()=>AgregarTramites(expediente)">
                        <span class="oi oi-pencil">Agregar Tramites</span>
                    </button>
                    </td>
                </tr>
                <td>
                    <button class="btn btn-danger" @onclick="()=> EliminarExpediente(expediente)">
                        <span class="oi oi-trash">EliminarExpediente</span>
                    </button>
                     <button class="btn btn-primary" @onclick="()=>EditarExpediente(expediente)">
                            <span class="oi oi-pencil">Editar</span>
                        </button>
                </td>
            }
        </tbody>
    </table>
     <button @onclick="IrAagregarUsuario" class="btn btn-primary">Agregar Expediente</button>
      
}


@code {
    private int id_Usuario => UserService.UserId;
    private string ErrorMessage { get; set; } = "";
    List<Expediente> _expedientes = new List<Expediente>();
    Expediente? _expedienteEliminar = null;


    protected override void OnInitialized()
    {
        _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar();
    }

    private void AgregarTramites (Expediente expediente)
    {
        NavigationManager.NavigateTo($"/AgregarTramite/{expediente.Id}");
    }
    private void EliminarExpediente(Expediente expediente)
    {
        _expedienteEliminar = expediente;
        if (_expedienteEliminar != null)
        {
            CasoDeUsoExpedienteBaja.Ejecutar(_expedienteEliminar.Id,id_Usuario);
            _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar(); // Actualiza la lista
            _expedienteEliminar = null; // Limpiar el usuario seleccionado
        }
    }

    private void EditarExpediente(Expediente expediente)
    {
         NavigationManager.NavigateTo($"/editarExpediente/{expediente.Id}");
    }


   private void ListaTramite(Expediente expediente)
    {
        NavigationManager.NavigateTo($"/listarTramites/{expediente.Id}");
    }


    private void IrAagregarUsuario()
    {
        NavigationManager.NavigateTo("/AgregarExpediente");
    }
    private void VolverHome()
    {
        NavigationManager.NavigateTo("/listadoUsuarios"); // Vuelve al Home q seria el listar
    }
}