@page "/listarExpedientes"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Web
@using SGE.Aplicacion.Servicios
@inject NavigationManager NavigationManager
@inject CasoDeUsoExpedienteConsultaTodos CasoDeUsoExpedienteConsultaTodos
@inject CasoDeUsoExpedienteConsultaPorId CasoDeUsoExpedienteConsultaPorId
@inject CasoDeUsoExpedienteBaja CasoDeUsoExpedienteBaja
@inject IUserService UserService


<h1>ListarExpedientes</h1>

<p>A continuaci√≥n se visualiza el listado de los Expedientes.</p>

@if (_expedientes == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Caratula</th>
                <th>FechaCreacion</th>
                <th>UltimaModificacion</th>
                <th>IdUsuarioUltimaModificacion</th>
                <th>Estado</th>
                <th>Tramites</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expediente in _expedientes)
            {
                <tr>
                    <td>@expediente.Id</td>
                    <td>@expediente.Caratula</td>
                    <td>@expediente.FechaCreacion</td>
                    <td>@expediente.UltimaModificacion</td>
                    <td>@expediente.IdUsuarioUltimaModificacion</td>
                    <td>@expediente.Estado</td>
                </tr>
                <td>
                    <button class="btn btn-primary" @onclick="()=>AgregarTramites()">
                        <span class="oi oi-pencil">Agregar Tramites</span>
                    </button>
                </td>
                <td>
                    <button class="btn btn-danger" @onclick="()=>EliminarExpediente(expediente)">
                        <span class="oi oi-trash">EliminarExpediente</span>
                    </button>
                </td>
                 <td>
                    <button class="btn btn-primary" @onclick="()=>ConsultaPorId(expediente)">
                        <span class="oi oi-pencil">Consultar por Id</span>
                    </button>
                </td>
            }
        </tbody>
    </table>
}
<div class="container">
    <button @onclick="VolverHome" class="btn btn-primary">Home</button>
</div>


@code {
    private int id_Usuario => UserService.UserId;
    private string ErrorMessage { get; set; }
    List<Expediente> _expedientes = new List<Expediente>();
    Expediente expediente = null;
    protected override void OnInitialized()
    {
        _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar();
    }

    private void AgregarTramites ()
    {
        
    }

    private void EliminarExpediente(Expediente expediente)
    {
        if (expediente != null)
        {
            CasoDeUsoExpedienteBaja.Ejecutar(expediente.Id,id_Usuario);
            _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar();
            expediente = null;
        }
        else{
            ErrorMessage = $"el expediente {expediente.Id} no existe";
        }
    }
    private void ConsultaPorId(Expediente expediente)
    {
        if (expediente != null)
        {
            CasoDeUsoExpedienteConsultaPorId.Ejecutar(expediente.Id);
            _expedientes = CasoDeUsoExpedienteConsultaTodos.Ejecutar();
            expediente = null;
        }
    }
    private void VolverHome()
    {
        NavigationManager.NavigateTo("/"); // Vuelve al Home
    }
}